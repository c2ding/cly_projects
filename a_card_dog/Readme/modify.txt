
.C
/* 包含头文件 ----------------------------------------------------------------*/
/* 私有宏定义 ----------------------------------------------------------------*/
/* 私有类型定义 --------------------------------------------------------------*/
/* 私有变量 ------------------------------------------------------------------*/
/* 扩展变量 ------------------------------------------------------------------*/
/* 私有函数原形 --------------------------------------------------------------*/
/* 函数体 --------------------------------------------------------------------*/
.H
/* 包含头文件 ----------------------------------------------------------------*/
/* 宏定义 --------------------------------------------------------------------*/
/* 类型定义 ------------------------------------------------------------------*/
/* 扩展变量 ------------------------------------------------------------------*/
/* 函数声明 ------------------------------------------------------------------*/
/*----------------------------------------------------------------------------*/
GPIO_InitStruct.Mode =
	GPIO_MODE_INPUT //输入模式
	GPIO_MODE_OUTPUT_PP //推挽输出
	GPIO_MODE_OUTPUT_OD //开漏输出
	GPIO_MODE_AF_PP //复用推挽输出
	GPIO_MODE_AF_OD  //复用开漏输出
	GPIO_MODE_AF_INPUT  //复用输入模式
	GPIO_MODE_ANALOG //模拟模式
	GPIO_MODE_IT_RISING //外部中断模式与上升沿触发检测
	GPIO_MODE_IT_FALLING //具有掉边触发检测的外部中断模式
	GPIO_MODE_IT_RISING_FALLING //外部中断模式与上升/下降沿触发检测
	GPIO_MODE_EVT_RISING //具有上升沿触发检测的外部事件模式
	GPIO_MODE_EVT_FALLING //具有掉边触发检测的外部事件模式
	GPIO_MODE_EVT_RISING_FALLING //外部事件模式与上升/下降沿触发检测
GPIO_InitStruct.Speed =
	GPIO_SPEED_FREQ_LOW //低速
	GPIO_SPEED_FREQ_MEDIUM //中速
	GPIO_SPEED_FREQ_HIGH //高速
GPIO_InitStruct.Pull = 
	GPIO_NOPULL //无山下拉
	GPIO_PULLUP //上拉
	GPIO_PULLDOWN //下拉
/*----------------------------------------------------------------------------*/
strlen 计算字符串里面一共有多少个字符
sizeof 计算字符串占的总内存空间 包含\0

register		寄存器变量 频繁使用
volatile		变量不会被优化
static			私有
float			单精度实型(浮点型) 32位 3.4e-38~3.4e38
double			双精度实型(浮点型) 64位 1.7e-308~1.7e308
long double		长双精度型(浮点型) 128位
/*----------------------------------------------------------------------------*/
	printf("%s:\r\n", __FILE__); //显示此行路径
	printf("file:%s,line:%d\r\n", __FILE__, __LINE__); //显示此行路径行号
/*----------------------------------------------------------------------------*/
